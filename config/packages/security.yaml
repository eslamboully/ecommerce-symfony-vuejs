security:
    encoders:
        App\Entity\Admin:
            algorithm: auto
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        admin_provider:
            entity:
                class: App\Entity\Admin
                property: email

        user_provider:
            entity:
                class: App\Entity\User
                property: email

        chain_provider:
            chain:
                providers: [user_provider, admin_provider]
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        back:
            pattern: ^/dashboard
            anonymous: lazy
            provider: admin_provider
            guard:
                authenticators:
                    - App\Security\AdminAuthenticator
                entry_point: App\Security\AdminAuthenticator
            logout:
                path: dashboard.logout

            # switch_user: true

        front:
            pattern: ^/
            anonymous: lazy
            provider: user_provider
            guard:
                authenticators:
                    - App\Security\UserAuthAuthenticator
                entry_point: App\Security\UserAuthAuthenticator

            json_login:
                check_path: front.login
                username_path: email
                password_path: password

            logout:
                path: front.logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/dashboard/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/dashboard/, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
